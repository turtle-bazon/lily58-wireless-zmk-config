/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        left_ctrl_alt: left_ctrl_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_CTRL_ALT";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp LALT>;

            tapping-term-ms = <300>;
        };

        right_ctrl_alt: right_ctrl_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_CTRL_ALT";
            #binding-cells = <0>;
            bindings = <&kp RCTRL>, <&kp RIGHT_ALT>;

            tapping-term-ms = <300>;
        };
    };

    combos {
        compatible = "zmk,combos";

        jkl-enter {
            bindings = <&kp RET>;
            key-positions = <30 31 32>;
        };

        dfg-enter {
            bindings = <&kp RET>;
            key-positions = <29 28 27>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4          &kp N5                                         &kp N6  &kp N7           &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB    &kp Q   &kp W   &kp E     &kp R           &kp T                                          &kp Y   &kp U            &kp I      &kp O    &kp P     &kp MINUS
&kp GRAVE  &kp A   &kp S   &kp D     &kp F           &kp G                                          &kp H   &kp J            &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V           &kp B   &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp N   &kp M            &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                           &kp LALT  &left_ctrl_alt  &mo 1   &kp SPACE           &kp SPACE          &mo 2   &right_ctrl_alt  &kp RALT
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Lower";
            bindings = <
&kp F11  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                  &kp F6        &kp F7        &kp F8       &kp F9         &kp F10        &kp DEL
&kp F12  &trans  &trans  &trans  &trans  &kp PAGE_UP                             &kp HOME      &kp UP        &kp END      &kp LC(LA(S))  &kp LC(LA(W))  &kp EQUAL
&trans   &trans  &trans  &trans  &trans  &kp PAGE_DOWN                           &kp LEFT      &kp DOWN      &kp RIGHT    &kp LC(LA(E))  &kp LC(LA(D))  &kp BACKSLASH
&trans   &trans  &trans  &trans  &trans  &trans         &kp CAPSLOCK    &kp INS  &kp KP_MINUS  &kp KP_EQUAL  &kp KP_PLUS  &kp PIPE       &kp KP_SLASH   &trans
                         &trans  &trans  &trans         &kp RET         &kp RET  &trans        &trans        &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Raise";
            bindings = <
&kp F11  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                  &kp F6        &kp F7        &kp F8       &kp F9         &kp F10        &kp DEL
&kp F12  &trans  &trans  &trans  &trans  &kp PAGE_UP                             &kp HOME      &kp UP        &kp END      &kp LC(LA(S))  &kp LC(LA(W))  &kp EQUAL
&trans   &trans  &trans  &trans  &trans  &kp PAGE_DOWN                           &kp LEFT      &kp DOWN      &kp RIGHT    &kp LC(LA(E))  &kp LC(LA(D))  &kp BACKSLASH
&trans   &trans  &trans  &trans  &trans  &trans         &kp CAPSLOCK    &kp INS  &kp KP_MINUS  &kp KP_EQUAL  &kp KP_PLUS  &kp PIPE       &kp KP_SLASH   &trans
                         &trans  &trans  &trans         &kp RET         &kp RET  &trans        &trans        &trans
            >;
        };

        kb_control_layer {
            display-name = "KBCTRL";
            bindings = <
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &bt BT_NXT                      &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &bt BT_PRV                      &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        kb_control_select {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
